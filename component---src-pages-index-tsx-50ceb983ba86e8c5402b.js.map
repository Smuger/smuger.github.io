{"version":3,"file":"component---src-pages-index-tsx-50ceb983ba86e8c5402b.js","mappings":"gPAKIA,GAAc,QAAW,SAAsBC,EAAOC,GACxD,MAAM,UAAEC,EAAS,WAAEC,EAAU,IAAEC,KAAQC,GAASL,EAChD,OAAuB,IAAAM,KAAI,MAAO,CAAEC,MAAOL,EAAWM,OAAQL,EAAYF,MAAKG,SAAQC,GACzF,IACAN,EAAYU,YAAc,c,cCyD1B,I,UClDA,SAASC,EAAKC,EAAQC,EAAa,IACjC,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGJ,GAChC,IAAK,MAAMK,KAAOJ,EACZI,KAAOH,UACFA,EAAMG,GAGjB,OAAOH,CACT,CAIA,IAAI,GAAQ,QAAW,SAAgBb,EAAOC,GAC5C,MAAM,YACJgB,EAAW,SACXC,EAAQ,IACRC,EAAG,OACHC,EAAM,MACNC,EAAK,IACLC,EAAG,QACHC,EAAO,eACPC,EAAc,YACdC,EAAW,iBACXC,EAAmB,oBAAmB,eACtCC,KACGtB,GACDL,EAEE4B,EAAuC,MAAXL,GAClCC,UAFyC,IAAhBP,QAAuC,IAAbC,GAI7CW,ED1CR,SAAkB7B,GAChB,MAAM,QACJuB,EAAO,IACPJ,EAAG,OACHC,EAAM,OACNU,EAAM,QACNC,EAAO,YACPN,EAAW,MACXO,EAAK,eACLR,GACExB,GACG6B,EAAQI,IAAa,IAAAC,UAAS,YACrC,IAAAC,YAAU,KACRF,EAAUd,EAAM,UAAY,UAAU,GACrC,CAACA,IACJ,MAAMiB,GAAW,IAAAC,UACXC,GAAO,IAAAC,cAAY,KACvB,IAAKpB,EACH,OACFqB,IACA,MAAMC,EAAM,IAAIC,MAChBD,EAAItB,IAAMA,EACNM,IACFgB,EAAIhB,YAAcA,GAChBL,IACFqB,EAAIE,OAASvB,GACXY,IACFS,EAAIT,MAAQA,GACVT,IACFkB,EAAIlB,QAAUA,GAChBkB,EAAIG,OAAUC,IACZL,IACAP,EAAU,UACA,MAAVH,GAA0BA,EAAOe,EAAM,EAEzCJ,EAAIK,QAAWC,IACbP,IACAP,EAAU,UACC,MAAXF,GAA2BA,EAAQgB,EAAM,EAE3CX,EAASY,QAAUP,CAAG,GACrB,CAACtB,EAAKM,EAAaL,EAAQY,EAAOF,EAAQC,EAASR,IAChDiB,EAAQ,KACRJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,KACrB,EAYF,OAVA,QAAoB,KAClB,IAAIxB,EAKJ,MAHe,YAAXK,GACFS,IAEK,KACLE,GAAO,CACR,GACA,CAACX,EAAQS,EAAMd,IACXA,EAAiB,SAAWK,CACrC,CClBiBoB,CAAS,IACnBjD,EACHyB,cACAD,eAAgBI,IAEZsB,EDcsB,EAACrB,EAAQH,IAAgC,WAAXG,GAA4C,sBAArBH,GAAuD,WAAXG,GAA4C,YAArBH,ECd1HyB,CAAwBtB,EAAQH,GACpD0B,EAAS,CACbnD,MACAoD,UAAW/B,EACXgC,eAAgBjC,KACbO,EAA4BvB,EAAOK,EAAKL,EAAM,CAAC,UAAW,YAE/D,OAAI6C,EACEhC,IAEmB,IAAAZ,KACrB,IAAOmC,IACP,CACEc,GAAIxD,EACJyD,UAAW,4BACXrC,IAAKF,KACFmC,KAIc,IAAA9C,KACrB,IAAOmC,IACP,CACEc,GAAIxD,EACJoB,MACAC,SACAK,cACAF,UACAI,iBACA6B,UAAW,kBACRJ,GAGT,IACA,EAAM3C,YAAc,Q,wBC3EpB,MAAMgD,EAA8BzD,GAK5B0D,EAAAA,cAACC,EAAAA,GAAG,CAACC,EAAG,EAAGC,QAAS,CAAEC,GAAI,SACtBJ,EAAAA,cAACC,EAAAA,GAAG,CAACI,WAAY,GACbL,EAAAA,cAAChB,EAAK,CACFsB,aAAa,KACbzD,MAAO,CAAEuD,GAAI,IACb3C,IAAI,yBACJf,IAAI,iCAGZsD,EAAAA,cAACC,EAAAA,GAAG,CAACM,GAAI,CAAEC,KAAM,EAAGJ,GAAI,GAAKK,GAAI,CAAEL,GAAI,IACnCJ,EAAAA,cAACU,EAAAA,EAAI,CACDC,WAAW,OACXC,cAAc,YACdC,SAAS,KACTC,cAAc,OACdC,MAAM,YAELzE,EAAM0E,KAYXhB,EAAAA,cAACiB,EAAAA,GAAI,CACDC,GAAG,QACHC,MAAO,CAEHC,eAAgB,SAGnB9E,EAAM+E,OAEXrB,EAAAA,cAACU,EAAAA,EAAI,CAACH,GAAI,EAAGQ,MAAM,YAAW,gIAS9ChB,EAA2BuB,aAAe,CACtCN,IAAI,QACJK,MAAM,WASV,Q,UCrBA,MApCwDE,IAAoB,IAAnB,KAAEC,EAAI,KAAEC,GAAM,EACrE,MAAM,EAACC,EAAK,EAAEC,IAAYnD,EAAAA,EAAAA,UAAiB,UAE3CC,EAAAA,EAAAA,YAAU,KACR,MAAMmD,EAAaC,aAAaC,QAAQ,aACpCF,GACFD,EAASC,EACX,GACC,IAEH,MAAM,UAAEG,EAAS,gBAAEC,IAAoBC,EAAAA,EAAAA,MAEvC,OACEjC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACkC,EAAAA,EAAM,CAACb,MAAM,QACZrB,EAAAA,cAACmC,EAAAA,EAAG,CAACd,MAAM,SAGXrB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,wBAAwBL,IAAI,UAC9DhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,qBAAqBL,IAAI,eAC3DhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,YAAYL,IAAI,UAClDhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,iBAAiBL,IAAI,UACvDhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,wBAAwBL,IAAI,UAC9DhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,6BAA6BL,IAAI,UACnEhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,uCAAuCL,IAAI,eAC7EhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,uBAAuBL,IAAI,eAC7DhB,EAAAA,cAACD,EAA0B,CAACsB,MAAM,yBAAyBL,IAAI,WAKjEhB,EAAAA,cAACoC,EAAAA,EAAgB,CAACC,QAASN,IAC1B,C","sources":["webpack://smuger.github.io/./node_modules/@chakra-ui/image/dist/chunk-X3PS6RUF.mjs","webpack://smuger.github.io/./node_modules/@chakra-ui/image/dist/chunk-SPIKMR6I.mjs","webpack://smuger.github.io/./node_modules/@chakra-ui/image/dist/chunk-QINAG4RG.mjs","webpack://smuger.github.io/./src/components/ResponsiveComponentExample.tsx","webpack://smuger.github.io/./src/pages/index.tsx"],"sourcesContent":["'use client'\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n//# sourceMappingURL=chunk-X3PS6RUF.mjs.map","'use client'\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n//# sourceMappingURL=chunk-SPIKMR6I.mjs.map","'use client'\nimport {\n  NativeImage\n} from \"./chunk-X3PS6RUF.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-SPIKMR6I.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n//# sourceMappingURL=chunk-QINAG4RG.mjs.map","// import { Link } from \"gatsby\"\nimport { Box, Image, Text, useBreakpointValue } from \"@chakra-ui/react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface ResponsiveComponentProps {\n    tag: string;\n    title: string;\n}\n\nconst ResponsiveComponentExample = (props: ResponsiveComponentProps) => {\n    // const leftPadding = useBreakpointValue({ base: `1rem`, md: `350px`, lg: `350px` });\n    // paddingLeft={leftPadding}\n\n    return (\n        <Box p={4} display={{ md: \"flex\" }} >\n            <Box flexShrink={0}>\n                <Image\n                    borderRadius=\"lg\"\n                    width={{ md: 40 }}\n                    src=\"https://bit.ly/2jYM25F\"\n                    alt=\"Woman paying for a purchase\"\n                />\n            </Box>\n            <Box mt={{ base: 4, md: 0 }} ml={{ md: 6 }}>\n                <Text\n                    fontWeight=\"bold\"\n                    textTransform=\"uppercase\"\n                    fontSize=\"sm\"\n                    letterSpacing=\"wide\"\n                    color=\"teal.600\"\n                >\n                    {props.tag}\n                </Text>\n                {/* <Link\n                    mt={1}\n                    display=\"block\"\n                    fontSize=\"lg\"\n                    lineHeight=\"normal\"\n                    fontWeight=\"semibold\"\n                    href=\"#\"\n                >\n                    {props.title}\n                </Link> */}\n                <Link\n                    to=\"/post\"\n                    style={{\n\n                        textDecoration: \"none\",\n                    }}\n                >\n                    {props.title}\n                </Link>\n                <Text mt={2} color=\"gray.500\">\n                    Getting a new business off the ground is a lot of hard work. Here are five\n                    ideas you can use to find your first customers.\n                </Text>\n            </Box>\n        </Box>\n    )\n}\n\nResponsiveComponentExample.defaultProps = {\n    tag: `NoTag`,\n    title: `NoTitle`\n}\n\n\nResponsiveComponentExample.propTypes = {\n    tag: PropTypes.string,\n    title: PropTypes.string,\n}\n\nexport default ResponsiveComponentExample","import React, { useState, useEffect } from 'react';\nimport { PageProps, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Box, Image, Text, Link, useColorMode } from \"@chakra-ui/react\"\nimport ResponsiveComponentExample from \"../components/ResponsiveComponentExample\"\nimport ResponsiveColumnExample from \"../components/ResponsiveColumnExample\"\n// import ResponsiveColumnMobileExample from \"../components/ResponsiveColumnMobileExample\"\nimport ResponsiveFooter from \"../components/ResponsiveFooter\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => {\n  const [theme, setTheme] = useState<string>('light');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('siteTheme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  return (\n    <>\n      <Layout title=\"TEST\">\n        <SEO title=\"Home\" />\n\n        {/* <ResponsiveColumnExample></ResponsiveColumnExample> */}\n        <ResponsiveComponentExample title='Simple Static Website' tag='Cloud'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='What is a Kubelet?' tag='Kubernetes'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='EFS vs S3' tag='Cloud'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='Amazon Linux 2' tag='Cloud'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='Simple Static Website' tag='Cloud'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='Convert Systemd to Service' tag='Linux'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='What can you edit without yaml file?' tag='Kubernetes'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='All types of objects' tag='Kubernetes'></ResponsiveComponentExample>\n        <ResponsiveComponentExample title='Audit, simple use-case' tag='Linux'></ResponsiveComponentExample>\n\n        {/* <Link to=\"/\">Go back to the homepage</Link> */}\n\n      </Layout>\n      <ResponsiveFooter variant={colorMode}></ResponsiveFooter>\n    </>\n  )\n}\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`"],"names":["NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","jsx","width","height","displayName","omit","object","keysToOmit","clone","Object","assign","key","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","ResponsiveComponentExample","React","Box","p","display","md","flexShrink","borderRadius","mt","base","ml","Text","fontWeight","textTransform","fontSize","letterSpacing","color","tag","Link","to","style","textDecoration","title","defaultProps","_ref","data","path","theme","setTheme","savedTheme","localStorage","getItem","colorMode","toggleColorMode","useColorMode","Layout","SEO","ResponsiveFooter","variant"],"sourceRoot":""}