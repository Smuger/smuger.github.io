{"version":3,"file":"component---src-pages-post-tsx-5492086ac5edc4e6c894.js","mappings":"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","sources":["webpack://smuger.github.io/./node_modules/@chakra-ui/skeleton/dist/chunk-GOJLRND4.mjs","webpack://smuger.github.io/./node_modules/@chakra-ui/skeleton/dist/chunk-AASO4CLC.mjs","webpack://smuger.github.io/./node_modules/@chakra-ui/react-use-previous/dist/index.mjs","webpack://smuger.github.io/./src/pages/post.tsx"],"sourcesContent":["'use client'\nimport {\n  useIsFirstRender\n} from \"./chunk-AASO4CLC.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport {\n  Skeleton\n};\n//# sourceMappingURL=chunk-GOJLRND4.mjs.map","'use client'\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\nexport {\n  useIsFirstRender\n};\n//# sourceMappingURL=chunk-AASO4CLC.mjs.map","'use client'\n\n// src/index.ts\nimport { useRef, useEffect } from \"react\";\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map","import React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Box, Image, Text, Link, VStack, Skeleton, useColorMode, Spacer } from \"@chakra-ui/react\"\nimport ResponsiveComponentExample from \"../components/ResponsiveComponentExample\"\nimport ResponsiveColumnExample from \"../components/ResponsiveColumnExample\"\nimport ResponsiveColumnMobileExample from \"../components/ResponsiveColumnMobileExample\"\nimport ResponsiveFooter from \"../components/ResponsiveFooter\"\nimport Header from \"../components/header\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst Post: React.FC<PageProps<DataProps>> = ({ data, path }) => {\n\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n\n    // <>\n    //     <Layout title=\"TEST\">\n    //         \n\n    //         <Text>POST</Text>\n    //         {/* <Link to=\"/\">Go back to the homepage</Link> */}\n    //     </Layout>\n    //     \n    // </>\n    <>\n      <Layout title=\"TEST\">\n        <SEO title=\"Post\" />\n\n        <Box mt={4}>\n          <Skeleton height=\"20px\" width=\"90%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"75%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"60%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"80%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"70%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"90%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"75%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"60%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"80%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"70%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"90%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"75%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"60%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"80%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n          <Skeleton height=\"20px\" width=\"70%\" mb={4} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n\n        </Box>\n\n      </Layout>\n\n      <ResponsiveFooter variant={colorMode}></ResponsiveFooter>\n    </>\n\n  )\n}\n\nexport default Post\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`"],"names":["StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","$endColor","fade","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","props","ref","skeletonProps","fadeDuration","speed","styles","isFirstRender","useRef","useEffect","current","useIsFirstRender","startColor","endColor","isLoaded","className","fitContent","rest","startColorVar","endColorVar","wasPreviouslyLoaded","value","usePrevious","_className","cx","cssVarStyles","variable","animation","jsx","div","__css","width","_dark","displayName","_ref","data","path","colorMode","toggleColorMode","useColorMode","React","Layout","title","SEO","Box","mt","height","mb","style","marginLeft","marginRight","ResponsiveFooter","variant"],"sourceRoot":""}